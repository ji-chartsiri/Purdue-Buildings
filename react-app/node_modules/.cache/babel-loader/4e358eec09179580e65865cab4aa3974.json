{"ast":null,"code":"var _jsxFileName = \"/Users/cj/Purdue-Buildings/react-app/src/App.js\";\nimport React from 'react';\nimport Menu from './modules/Menu';\nimport Mymap from './modules/Mymap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'finder',\n      building: 'WALC',\n      floor: '0',\n      findRoomId: '',\n      sourceRoomId: '',\n      destinationRoomId: '',\n      marker: {\n        position: [],\n        floor: '0'\n      },\n      routeLine: {},\n      mapBounds: [[0, 600], [450, 0]]\n    };\n    this.handleChangeFloor = this.handleChangeFloor.bind(this);\n    this.validateId = this.validateId.bind(this);\n    this.handleChangeFinder = this.handleChangeFinder.bind(this);\n    this.handleSubmitFinder = this.handleSubmitFinder.bind(this);\n    this.handleChangeRouterSource = this.handleChangeRouterSource.bind(this);\n    this.handleChangeRouterDestination = this.handleChangeRouterDestination.bind(this);\n    this.handleSubmitRouter = this.handleSubmitRouter.bind(this);\n  }\n\n  handleChangeFloor(event) {\n    this.setState({\n      floor: event.target.value\n    });\n  }\n\n  validateId(id) {\n    let allNodes = require('./json/' + this.state.building + '.json')[1];\n\n    return typeof id === 'string' && id in allNodes;\n  }\n\n  handleChangeFinder(event) {\n    this.setState({\n      findRoomId: event.target.value.split('').map(x => typeof x == 'string' ? x.toUpperCase() : x).join(''),\n      mode: 'finder'\n    });\n  }\n\n  handleSubmitFinder(event) {\n    if (this.state.mode === 'found') {\n      this.setState({\n        mode: 'router'\n      });\n    } else if (!this.validateId(this.state.findRoomId)) alert('Please input valid room number');else {\n      let allNodes = require('./json/' + this.state.building + '.json')[1];\n\n      this.setState({\n        marker: {\n          position: [allNodes[this.state.findRoomId].lat, allNodes[this.state.findRoomId].lon],\n          floor: allNodes[this.state.findRoomId].floor\n        },\n        floor: allNodes[this.state.findRoomId].floor,\n        mode: 'found'\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  handleChangeRouterSource(event) {\n    this.setState({\n      sourceRoomId: event.target.value.split('').map(x => typeof x == 'string' ? x.toUpperCase() : x).join('')\n    });\n  }\n\n  handleChangeRouterDestination(event) {\n    this.setState({\n      destinationRoomId: event.target.value.split('').map(x => typeof x == 'string' ? x.toUpperCase() : x).join('')\n    });\n  }\n\n  handleSubmitRouter(event) {\n    if (!this.validateId(this.state.sourceRoomId)) alert('Please input valid source room number');else if (!this.validateId(this.state.destinationRoomId)) alert('Please input valid destination room number');else {\n      let allNodes = require('./json/' + this.state.building + '.json')[1];\n\n      for (let i in allNodes) {\n        allNodes[i].isVisited = false;\n        allNodes[i].from = '';\n      }\n\n      for (let i in allNodes) for (let j in allNodes[i].adj) if (!allNodes[allNodes[i].adj[j]].adj.includes(i)) allNodes[allNodes[i].adj[j]].adj.push(i);\n\n      let consideringNodes = [this.state.sourceRoomId];\n\n      while (consideringNodes.length > 0) {\n        let currentNode = consideringNodes.shift();\n        if (allNodes[currentNode].isVisited) continue;\n        allNodes[currentNode].isVisited = true;\n\n        if (currentNode === this.state.destinationRoomId) {\n          let routeLine = {};\n\n          let allFloors = require('./json/' + this.state.building + '.json')[0].floors;\n\n          for (let i in allFloors) routeLine[allFloors[i]] = [];\n\n          while (true) {\n            routeLine[allNodes[currentNode].floor].push([allNodes[currentNode].lat, allNodes[currentNode].lon]);\n            if (currentNode === this.state.sourceRoomId) break;\n            currentNode = allNodes[currentNode].from;\n          }\n\n          this.setState({\n            routeLine: routeLine,\n            floor: allNodes[currentNode].floor\n          });\n          break;\n        }\n\n        for (let i in allNodes[currentNode].adj) if (!allNodes[allNodes[currentNode].adj[i]].isVisited) {\n          allNodes[allNodes[currentNode].adj[i]].from = currentNode;\n          consideringNodes.push(allNodes[currentNode].adj[i]);\n        }\n      }\n    }\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      mode: this.state.mode,\n      building: this.state.building,\n      floor: this.state.floor,\n      allFloors: require('./json/' + this.state.building + '.json')[0].floors,\n      handleChangeFloor: this.handleChangeFloor,\n      findRoomId: this.state.findRoomId,\n      handleChangeFinder: this.handleChangeFinder,\n      handleSubmitFinder: this.handleSubmitFinder,\n      sourceRoomId: this.state.sourceRoomId,\n      destinationRoomId: this.state.destinationRoomId,\n      handleChangeRouterSource: this.handleChangeRouterSource,\n      handleChangeRouterDestination: this.handleChangeRouterDestination,\n      handleSubmitRouter: this.handleSubmitRouter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Mymap, {\n      mapBounds: this.state.mapBounds,\n      imageUrl: require('./img/' + this.state.building + '/' + this.state.floor + '.jpg'),\n      imageBounds: [[this.state.mapBounds[1][0], 0], [0, this.state.mapBounds[0][1]]],\n      marker: this.state.marker.floor === this.state.floor ? this.state.marker : {\n        position: [],\n        floor: this.state.marker.floor\n      },\n      routeLine: typeof this.state.routeLine[this.state.floor] == 'undefined' ? [] : this.state.routeLine[this.state.floor],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cj/Purdue-Buildings/react-app/src/App.js"],"names":["React","Menu","Mymap","App","Component","constructor","props","state","mode","building","floor","findRoomId","sourceRoomId","destinationRoomId","marker","position","routeLine","mapBounds","handleChangeFloor","bind","validateId","handleChangeFinder","handleSubmitFinder","handleChangeRouterSource","handleChangeRouterDestination","handleSubmitRouter","event","setState","target","value","id","allNodes","require","split","map","x","toUpperCase","join","alert","lat","lon","preventDefault","i","isVisited","from","j","adj","includes","push","consideringNodes","length","currentNode","shift","allFloors","floors","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Menu from './modules/Menu'\nimport Mymap from './modules/Mymap'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n        mode: 'finder',\n        building: 'WALC',\n        floor: '0',\n        findRoomId: '',\n        sourceRoomId: '',\n        destinationRoomId: '',\n        marker: {position: [], floor: '0'},\n        routeLine:  {},\n        mapBounds: [[0, 600], [450, 0]]\n    }\n\n    this.handleChangeFloor = this.handleChangeFloor.bind(this)\n    this.validateId = this.validateId.bind(this)\n    this.handleChangeFinder = this.handleChangeFinder.bind(this)\n    this.handleSubmitFinder = this.handleSubmitFinder.bind(this)\n    this.handleChangeRouterSource = this.handleChangeRouterSource.bind(this)\n    this.handleChangeRouterDestination = this.handleChangeRouterDestination.bind(this)\n    this.handleSubmitRouter = this.handleSubmitRouter.bind(this)\n  }\n\n  handleChangeFloor(event) {\n    this.setState({floor: event.target.value})\n  }\n\n  validateId(id) {\n\n    let allNodes = require('./json/' + this.state.building + '.json')[1]\n    return (typeof id === 'string' && id in allNodes)\n  }\n\n  handleChangeFinder(event) {\n    this.setState({\n      findRoomId: event.target.value.split('').map(x => typeof x == 'string' ? x.toUpperCase() : x).join(''),\n      mode: 'finder'\n    })\n  }\n\n\n  handleSubmitFinder(event) {\n    if(this.state.mode === 'found') {\n      this.setState({mode: 'router'})\n    }\n    else if(!this.validateId(this.state.findRoomId))\n      alert('Please input valid room number')\n    else{\n      let allNodes = require('./json/' + this.state.building + '.json')[1]\n      this.setState({\n        marker: {\n          position: [allNodes[this.state.findRoomId].lat, allNodes[this.state.findRoomId].lon],\n          floor: allNodes[this.state.findRoomId].floor\n        },\n        floor: allNodes[this.state.findRoomId].floor,\n        mode: 'found'\n      })\n    }\n    event.preventDefault()\n  }\n\n  handleChangeRouterSource(event) {\n    this.setState({sourceRoomId: event.target.value.split('').map(x => typeof x == 'string' ? x.toUpperCase() : x).join('')})\n  }\n\n  handleChangeRouterDestination(event) {\n    this.setState({destinationRoomId: event.target.value.split('').map(x => typeof x == 'string' ? x.toUpperCase() : x).join('')})\n  }\n\n  handleSubmitRouter(event) {\n    if(!this.validateId(this.state.sourceRoomId))\n      alert('Please input valid source room number')\n    else if(!this.validateId(this.state.destinationRoomId))\n      alert('Please input valid destination room number')\n    else {\n      let allNodes = require('./json/' + this.state.building + '.json')[1]\n\n      for(let i in allNodes) {\n        allNodes[i].isVisited = false\n        allNodes[i].from = ''\n      }\n\n      for(let i in allNodes)\n        for(let j in allNodes[i].adj)\n          if(!allNodes[allNodes[i].adj[j]].adj.includes(i))\n            allNodes[allNodes[i].adj[j]].adj.push(i)\n\n      let consideringNodes = [this.state.sourceRoomId]\n\n      while(consideringNodes.length > 0) {\n        let currentNode = consideringNodes.shift()\n        if(allNodes[currentNode].isVisited)\n          continue\n        allNodes[currentNode].isVisited = true\n\n        if(currentNode === this.state.destinationRoomId) {\n          let routeLine = {}\n          let allFloors = (require('./json/' + this.state.building + '.json')[0]).floors\n\n          for(let i in allFloors)\n            routeLine[allFloors[i]] = []\n\n          while(true) {\n            routeLine[allNodes[currentNode].floor].push([allNodes[currentNode].lat, allNodes[currentNode].lon]) \n            if(currentNode === this.state.sourceRoomId)\n              break \n            currentNode = allNodes[currentNode].from\n          }\n          this.setState({routeLine: routeLine, floor: allNodes[currentNode].floor})\n          break\n        }\n\n        for(let i in allNodes[currentNode].adj)\n          if(!allNodes[allNodes[currentNode].adj[i]].isVisited) {\n            allNodes[allNodes[currentNode].adj[i]].from = currentNode\n            consideringNodes.push(allNodes[currentNode].adj[i])\n          }\n      }\n    }\n    event.preventDefault()\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Menu \n          mode={this.state.mode}\n\n          building={this.state.building}\n          floor={this.state.floor}\n          allFloors={(require('./json/' + this.state.building + '.json')[0]).floors}\n          handleChangeFloor={this.handleChangeFloor}\n\n          findRoomId={this.state.findRoomId}\n          handleChangeFinder={this.handleChangeFinder}\n          handleSubmitFinder={this.handleSubmitFinder}\n\n          sourceRoomId={this.state.sourceRoomId}\n          destinationRoomId={this.state.destinationRoomId}\n          handleChangeRouterSource={this.handleChangeRouterSource}\n          handleChangeRouterDestination={this.handleChangeRouterDestination}\n          handleSubmitRouter={this.handleSubmitRouter}\n        />\n        <Mymap \n          mapBounds={this.state.mapBounds} \n          imageUrl={require('./img/' + this.state.building + '/' + this.state.floor + '.jpg')} \n          imageBounds={[[this.state.mapBounds[1][0],0], [0, this.state.mapBounds[0][1]]]}\n          marker={this.state.marker.floor === this.state.floor ? this.state.marker : {position: [], floor: this.state.marker.floor}}\n          routeLine={typeof this.state.routeLine[this.state.floor] == 'undefined' ? [] : this.state.routeLine[this.state.floor]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}